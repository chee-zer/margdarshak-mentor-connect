// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  phone BigInt @unique
  email String @unique
  hashedPassword String
  salt String
  verificationStatus Boolean
  createdAt DateTime
  updatedAt DateTime
  role Role 

  tokens Token[] 
  Profile Profile[]
  notifications Notification[]
}

model Profile {
  id String @id @default(uuid())
  user User @relation(fields: [userID], references: [id])
  userID String @unique
  occupation String?
  about String?
  linkedinUrl String?
  githubUrl String?
  dribbleUrl String?
  youtubeChannel String?
  employmentStatus Boolean?
  employedSince Int?
  profileCompletionPercentage Int @default(0)

  educations Education[]
  experiences Experience[]
}

model Notification {
  id String @id @default(uuid())
  user User @relation(fields: [userID], references: [id])
  redirectUrl String
  userID String
  message String
}

model Education {
  id String @id @default(uuid())
  profile Profile @relation(fields: [profileID], references: [id])
  profileID String 
  degree String
  startDate DateTime
  endDate DateTime
  location String
  description String

}

model Experience {
  id String @id @default(uuid())
  profile Profile @relation(fields: [profileID], references: [id])
  profileID String 
  jobTitle String
  startDate DateTime
  endDate DateTime
  companyName String
  description String

}

model Token {
  id String @default(uuid())
  user User @relation(fields: [userID], references: [id])
  userID String @unique
  token_value String
}

model Session {
  id String @default(uuid())
  sid String @unique
  data String
  expiresAt DateTime
}

enum Role {
  MENTOR
  MENTEE
}